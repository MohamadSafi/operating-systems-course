Input:
1 2
3 0
1 0
3 2
1 1
3 1

Output:
Thread 1 is created
Thread 1 tries to lock mutex 0
Thread 1 locked mutex 0
Thread 3 is created
Thread 3 tries to lock mutex 0
Thread 1 unlocked mutex 0
Thread 1 tries to lock mutex 1
Thread 1 locked mutex 1
Thread 3 locked mutex 0
Thread 1 unlocked mutex 1
Thread 1 tries to lock mutex 2
Thread 1 locked mutex 2
Thread 1 unlocked mutex 2
Thread 1 has finished
Thread 3 unlocked mutex 0
Thread 3 tries to lock mutex 1
Thread 3 locked mutex 1
Thread 3 unlocked mutex 1
Thread 3 tries to lock mutex 2
Thread 3 locked mutex 2
Thread 3 unlocked mutex 2
Thread 3 has finished

Why did the deadlock occur if it is a
deadlock? and Why it did not happen if it is not a deadlock?

The potential for a deadlock in the program depends on how threads lock and unlock mutexes. 
Deadlock can happen if threads end up waiting for each other in a loop, each holding a resource 
the other needs. If threads manage to avoid this circular waiting, then no deadlock occurs. 
The actual occurrence of deadlock depends on the order and timing of how threads lock and 
unlock the resources.